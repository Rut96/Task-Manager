{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// Init Tasks\nexport function initTasks(currentState, action) {\n  return action.payload;\n}\n\n// Add Task\nexport function addTask(currentState, action) {\n  const newState = [...currentState];\n  newState.push(action.payload);\n  return newState;\n}\n\n// Update Task\nexport function updateTask(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(t => t._id === action.payload._id);\n  if (index !== -1) {\n    newState[index] = action.payload;\n  }\n  return newState;\n}\n\n// Delete Task\nexport function deleteTask(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(t => t._id === action.payload);\n  if (index !== -1) {\n    newState.splice(index, 1);\n  }\n  return newState;\n}\n\n// Update Task Status\nexport function updateTaskStatus(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(t => t._id === action.payload.taskId);\n  if (index !== -1) {\n    newState[index] = {\n      ...newState[index],\n      status: action.payload.status\n    };\n  }\n  return newState;\n}\n\n// Clear Tasks\nexport function clearTasks(currentState, action) {\n  return [];\n}\nexport const taskSlice = createSlice({\n  name: \"tasks\",\n  initialState: [],\n  reducers: {\n    initTasks,\n    addTask,\n    updateTask,\n    deleteTask,\n    updateTaskStatus,\n    clearTasks\n  }\n});\nexport const taskActions = taskSlice.actions;","map":{"version":3,"names":["createSlice","initTasks","currentState","action","payload","addTask","newState","push","updateTask","index","findIndex","t","_id","deleteTask","splice","updateTaskStatus","taskId","status","clearTasks","taskSlice","name","initialState","reducers","taskActions","actions"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Redux/TaskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TaskModel } from \"../Models/TaskModel\";\n\n// Init Tasks\nexport function initTasks(currentState: TaskModel[], action: PayloadAction<TaskModel[]>): TaskModel[] {\n    return action.payload;\n}\n\n// Add Task\nexport function addTask(currentState: TaskModel[], action: PayloadAction<TaskModel>): TaskModel[] {\n    const newState = [...currentState];\n    newState.push(action.payload);\n    return newState;\n}\n\n// Update Task\nexport function updateTask(currentState: TaskModel[], action: PayloadAction<TaskModel>): TaskModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(t => t._id === action.payload._id);\n    if (index !== -1) {\n        newState[index] = action.payload;\n    }\n    return newState;\n}\n\n// Delete Task\nexport function deleteTask(currentState: TaskModel[], action: PayloadAction<string>): TaskModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(t => t._id === action.payload);\n    if (index !== -1) {\n        newState.splice(index, 1);\n    }\n    return newState;\n}\n\n// Update Task Status\nexport function updateTaskStatus(currentState: TaskModel[], action: PayloadAction<{ taskId: string; status: string }>): TaskModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(t => t._id === action.payload.taskId);\n    if (index !== -1) {\n        newState[index] = {\n            ...newState[index],\n            status: action.payload.status\n        };\n    }\n    return newState;\n}\n\n// Clear Tasks\nexport function clearTasks(currentState: TaskModel[], action: PayloadAction): TaskModel[] {\n    return [];\n}\n\nexport const taskSlice = createSlice({\n    name: \"tasks\",\n    initialState: [],\n    reducers: { \n        initTasks, \n        addTask, \n        updateTask, \n        deleteTask, \n        updateTaskStatus, \n        clearTasks \n    }\n});\n\nexport const taskActions = taskSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D;AACA,OAAO,SAASC,SAASA,CAACC,YAAyB,EAAEC,MAAkC,EAAe;EAClG,OAAOA,MAAM,CAACC,OAAO;AACzB;;AAEA;AACA,OAAO,SAASC,OAAOA,CAACH,YAAyB,EAAEC,MAAgC,EAAe;EAC9F,MAAMG,QAAQ,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAClCI,QAAQ,CAACC,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;EAC7B,OAAOE,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASE,UAAUA,CAACN,YAAyB,EAAEC,MAAgC,EAAe;EACjG,MAAMG,QAAQ,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAClC,MAAMO,KAAK,GAAGH,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKT,MAAM,CAACC,OAAO,CAACQ,GAAG,CAAC;EACnE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;IACdH,QAAQ,CAACG,KAAK,CAAC,GAAGN,MAAM,CAACC,OAAO;EACpC;EACA,OAAOE,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASO,UAAUA,CAACX,YAAyB,EAAEC,MAA6B,EAAe;EAC9F,MAAMG,QAAQ,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAClC,MAAMO,KAAK,GAAGH,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKT,MAAM,CAACC,OAAO,CAAC;EAC/D,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;IACdH,QAAQ,CAACQ,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;EAC7B;EACA,OAAOH,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASS,gBAAgBA,CAACb,YAAyB,EAAEC,MAAyD,EAAe;EAChI,MAAMG,QAAQ,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAClC,MAAMO,KAAK,GAAGH,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKT,MAAM,CAACC,OAAO,CAACY,MAAM,CAAC;EACtE,IAAIP,KAAK,KAAK,CAAC,CAAC,EAAE;IACdH,QAAQ,CAACG,KAAK,CAAC,GAAG;MACd,GAAGH,QAAQ,CAACG,KAAK,CAAC;MAClBQ,MAAM,EAAEd,MAAM,CAACC,OAAO,CAACa;IAC3B,CAAC;EACL;EACA,OAAOX,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASY,UAAUA,CAAChB,YAAyB,EAAEC,MAAqB,EAAe;EACtF,OAAO,EAAE;AACb;AAEA,OAAO,MAAMgB,SAAS,GAAGnB,WAAW,CAAC;EACjCoB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNrB,SAAS;IACTI,OAAO;IACPG,UAAU;IACVK,UAAU;IACVE,gBAAgB;IAChBG;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAGJ,SAAS,CAACK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}