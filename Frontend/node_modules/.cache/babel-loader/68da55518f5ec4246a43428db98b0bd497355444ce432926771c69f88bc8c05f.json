{"ast":null,"code":"// src/store/ActivitySlice.ts\nimport { createSlice } from \"@reduxjs/toolkit\";\n// Init Activities\nexport function initActivities(currentState, action) {\n  return action.payload;\n}\n\n// Add Activity\nexport function addActivity(currentState, action) {\n  const newState = [...currentState];\n  newState.push(action.payload);\n  return newState;\n}\n\n// Clear Activities\nexport function clearActivities(currentState, action) {\n  return [];\n}\n\n// Set Recent Activities\nexport function setRecentActivities(currentState, action) {\n  return action.payload;\n}\nexport const activitySlice = createSlice({\n  name: \"activities\",\n  initialState: [],\n  reducers: {\n    initActivities,\n    addActivity,\n    clearActivities,\n    setRecentActivities\n  }\n});\nexport const activityActions = activitySlice.actions;","map":{"version":3,"names":["createSlice","initActivities","currentState","action","payload","addActivity","newState","push","clearActivities","setRecentActivities","activitySlice","name","initialState","reducers","activityActions","actions"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Redux/ActivitySlice.ts"],"sourcesContent":["// src/store/ActivitySlice.ts\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ActivityModel } from \"../Models/ActivityModel\";\n\n// Init Activities\nexport function initActivities(currentState: ActivityModel[], action: PayloadAction<ActivityModel[]>): ActivityModel[] {\n    return action.payload;\n}\n\n// Add Activity\nexport function addActivity(currentState: ActivityModel[], action: PayloadAction<ActivityModel>): ActivityModel[] {\n    const newState = [...currentState];\n    newState.push(action.payload);\n    return newState;\n}\n\n// Clear Activities\nexport function clearActivities(currentState: ActivityModel[], action: PayloadAction): ActivityModel[] {\n    return [];\n}\n\n// Set Recent Activities\nexport function setRecentActivities(currentState: ActivityModel[], action: PayloadAction<ActivityModel[]>): ActivityModel[] {\n    return action.payload;\n}\n\nexport const activitySlice = createSlice({\n    name: \"activities\",\n    initialState: [],\n    reducers: { \n        initActivities, \n        addActivity, \n        clearActivities, \n        setRecentActivities \n    }\n});\n\nexport const activityActions = activitySlice.actions;"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D;AACA,OAAO,SAASC,cAAcA,CAACC,YAA6B,EAAEC,MAAsC,EAAmB;EACnH,OAAOA,MAAM,CAACC,OAAO;AACzB;;AAEA;AACA,OAAO,SAASC,WAAWA,CAACH,YAA6B,EAAEC,MAAoC,EAAmB;EAC9G,MAAMG,QAAQ,GAAG,CAAC,GAAGJ,YAAY,CAAC;EAClCI,QAAQ,CAACC,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;EAC7B,OAAOE,QAAQ;AACnB;;AAEA;AACA,OAAO,SAASE,eAAeA,CAACN,YAA6B,EAAEC,MAAqB,EAAmB;EACnG,OAAO,EAAE;AACb;;AAEA;AACA,OAAO,SAASM,mBAAmBA,CAACP,YAA6B,EAAEC,MAAsC,EAAmB;EACxH,OAAOA,MAAM,CAACC,OAAO;AACzB;AAEA,OAAO,MAAMM,aAAa,GAAGV,WAAW,CAAC;EACrCW,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNZ,cAAc;IACdI,WAAW;IACXG,eAAe;IACfC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,eAAe,GAAGJ,aAAa,CAACK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}