{"ast":null,"code":"// src/store/WorkspaceSlice.ts\nimport { createSlice } from \"@reduxjs/toolkit\";\n// Init Workspaces\nexport function initWorkspaces(currentState, action) {\n  return action.payload;\n}\n\n// Add Workspace\nexport function addWorkspace(currentState, action) {\n  const newState = [...currentState];\n  newState.push(action.payload);\n  return newState;\n}\n\n// Update Workspace\nexport function updateWorkspace(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(w => w._id === action.payload._id);\n  if (index !== -1) {\n    newState[index] = action.payload;\n  }\n  return newState;\n}\n\n// Delete Workspace\nexport function deleteWorkspace(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(w => w._id === action.payload);\n  if (index !== -1) {\n    newState.splice(index, 1);\n  }\n  return newState;\n}\n\n// Add Workspace Member\nexport function addWorkspaceMember(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(w => w._id === action.payload.workspaceId);\n  if (index !== -1) {\n    newState[index] = {\n      ...newState[index],\n      members: [...newState[index].members, {\n        userId: action.payload.userId,\n        role: action.payload.role\n      }]\n    };\n  }\n  return newState;\n}\n\n// Remove Workspace Member\nexport function removeWorkspaceMember(currentState, action) {\n  const newState = [...currentState];\n  const index = newState.findIndex(w => w._id === action.payload.workspaceId);\n  if (index !== -1) {\n    newState[index] = {\n      ...newState[index],\n      members: newState[index].members.filter(m => m.userId !== action.payload.userId)\n    };\n  }\n  return newState;\n}\n\n// Clear Workspaces\nexport function clearWorkspaces(currentState, action) {\n  return [];\n}\nexport const workspaceSlice = createSlice({\n  name: \"workspaces\",\n  initialState: [],\n  reducers: {\n    initWorkspaces,\n    addWorkspace,\n    updateWorkspace,\n    deleteWorkspace,\n    addWorkspaceMember,\n    removeWorkspaceMember,\n    clearWorkspaces\n  }\n});\nexport const workspaceActions = workspaceSlice.actions;","map":{"version":3,"names":["createSlice","initWorkspaces","currentState","action","payload","addWorkspace","newState","push","updateWorkspace","index","findIndex","w","_id","deleteWorkspace","splice","addWorkspaceMember","workspaceId","members","userId","role","removeWorkspaceMember","filter","m","clearWorkspaces","workspaceSlice","name","initialState","reducers","workspaceActions","actions"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Redux/WorkspaceSlice.ts"],"sourcesContent":["// src/store/WorkspaceSlice.ts\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { WorkspaceModel } from \"../Models/WorkspaceModel\";\n\n// Init Workspaces\nexport function initWorkspaces(currentState: WorkspaceModel[], action: PayloadAction<WorkspaceModel[]>): WorkspaceModel[] {\n    return action.payload;\n}\n\n// Add Workspace\nexport function addWorkspace(currentState: WorkspaceModel[], action: PayloadAction<WorkspaceModel>): WorkspaceModel[] {\n    const newState = [...currentState];\n    newState.push(action.payload);\n    return newState;\n}\n\n// Update Workspace\nexport function updateWorkspace(currentState: WorkspaceModel[], action: PayloadAction<WorkspaceModel>): WorkspaceModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(w => w._id === action.payload._id);\n    if (index !== -1) {\n        newState[index] = action.payload;\n    }\n    return newState;\n}\n\n// Delete Workspace\nexport function deleteWorkspace(currentState: WorkspaceModel[], action: PayloadAction<string>): WorkspaceModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(w => w._id === action.payload);\n    if (index !== -1) {\n        newState.splice(index, 1);\n    }\n    return newState;\n}\n\n// Add Workspace Member\nexport function addWorkspaceMember(\n    currentState: WorkspaceModel[], \n    action: PayloadAction<{ workspaceId: string; userId: string; role: 'admin' | 'member' }>\n): WorkspaceModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(w => w._id === action.payload.workspaceId);\n    if (index !== -1) {\n        newState[index] = {\n            ...newState[index],\n            members: [...newState[index].members, { userId: action.payload.userId, role: action.payload.role }]\n        };\n    }\n    return newState;\n}\n\n// Remove Workspace Member\nexport function removeWorkspaceMember(\n    currentState: WorkspaceModel[], \n    action: PayloadAction<{ workspaceId: string; userId: string }>\n): WorkspaceModel[] {\n    const newState = [...currentState];\n    const index = newState.findIndex(w => w._id === action.payload.workspaceId);\n    if (index !== -1) {\n        newState[index] = {\n            ...newState[index],\n            members: newState[index].members.filter(m => m.userId !== action.payload.userId)\n        };\n    }\n    return newState;\n}\n\n// Clear Workspaces\nexport function clearWorkspaces(currentState: WorkspaceModel[], action: PayloadAction): WorkspaceModel[] {\n    return [];\n}\n\nexport const workspaceSlice = createSlice({\n    name: \"workspaces\",\n    initialState: [],\n    reducers: { \n        initWorkspaces, \n        addWorkspace, \n        updateWorkspace, \n        deleteWorkspace, \n        addWorkspaceMember, \n        removeWorkspaceMember, \n        clearWorkspaces \n    }\n});\n\nexport const workspaceActions = workspaceSlice.actions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}