{"ast":null,"code":"var _jsxFileName = \"/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Components/PagesArea/Tasks/Tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Tasks.css\";\nimport { taskService } from \"../../../Services/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tasks({\n  boardId,\n  columnId\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        console.log(\"Board id: \" + boardId);\n        console.log(\"Column id: \" + columnId);\n        const fetchedTasks = await taskService.getTasksByColumn(boardId, columnId);\n        console.log(fetchedTasks);\n        setTasks(fetchedTasks);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching tasks:\", err);\n        setError(\"Failed to load tasks\");\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [boardId, columnId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-card\",\n      children: [task.labels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-labels\",\n        children: task.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-label\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), label]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-description\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `task-priority-${task.priority}`,\n        children: [\"Priority: \", task.priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-bottom\",\n        children: [task.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-due-date\",\n          children: [\"Due: \", new Date(task.dueDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), task.assignees.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-assignees\",\n          children: [\"Assignees: \", task.assignees.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), task.attachments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)), tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-tasks\",\n      children: \"No tasks in this column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useEffect","useState","taskService","jsxDEV","_jsxDEV","Tasks","boardId","columnId","_s","tasks","setTasks","loading","setLoading","error","setError","console","log","fetchedTasks","getTasksByColumn","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","labels","length","label","index","Tag","title","description","priority","dueDate","Date","toLocaleDateString","assignees","attachments","_id","_c","$RefreshReg$"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Components/PagesArea/Tasks/Tasks.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./Tasks.css\";\nimport { TaskModel } from \"../../../Models/TaskModel\";\nimport { taskService } from \"../../../Services/TaskService\";\n\ninterface TasksProps {\n    boardId: string;\n    columnId: string;\n}\n\nexport function Tasks({ boardId, columnId }: TasksProps): JSX.Element {\n    const [tasks, setTasks] = useState<TaskModel[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setLoading(true);\n                console.log(\"Board id: \" + boardId);\n                console.log(\"Column id: \" + columnId);\n                const fetchedTasks = await taskService.getTasksByColumn(boardId, columnId);\n                console.log(fetchedTasks);\n                setTasks(fetchedTasks);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error fetching tasks:\", err);\n                setError(\"Failed to load tasks\");\n            } finally {\n                setLoading(false);\n            }\n        })();\n    }, [boardId, columnId]);\n\n    if (loading) {\n        return <div className=\"tasks-loading\">Loading tasks...</div>;\n    }\n\n    if (error) {\n        return <div className=\"tasks-error\">{error}</div>;\n    }\n\n    return (\n        <div className=\"Tasks\">\n            {tasks.map(task => (\n                <div key={task._id} className=\"task-card\">\n\n                    {/* Labels */}\n                    {task.labels.length > 0 && (\n                        <div className=\"task-labels\">\n                            {task.labels.map((label, index) => (\n                                <span key={index} className=\"task-label\">\n                                    <Tag className=\"label-icon\" />\n                                    {label}\n                                </span>\n                            ))}\n                        </div>\n                    )}\n\n                    {/* Title */}\n                    <h3 className=\"task-title\">{task.title}</h3>\n                    \n                    {task.description && (\n                        <p className=\"task-description\">{task.description}</p>\n                    )}\n                    <span className={`task-priority-${task.priority}`}>Priority: {task.priority}</span>\n\n                    <div className=\"task-bottom\">\n                        {task.dueDate && (\n                            <span className=\"task-due-date\">\n                                Due: {new Date(task.dueDate).toLocaleDateString()}\n                            </span>\n                        )}\n\n                        {task.assignees.length > 0 && (\n                            <div className=\"task-assignees\">\n                                Assignees: {task.assignees.length}\n                            </div>\n                        )}\n\n                        {task.attachments.length > 0 &&\n                            <div className=\"task-attachments\"></div>\n                        }\n                    </div>\n\n                </div>\n            ))}\n            {tasks.length === 0 && (\n                <div className=\"no-tasks\">No tasks in this column</div>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}