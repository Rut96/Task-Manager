{"ast":null,"code":"import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass TaskService {\n  // Without Redux for now\n  async getAllTasks() {\n    const response = await axios.get(appConfig.tasksUrl);\n    return response.data;\n  }\n  async getOneTask(taskId) {\n    const response = await axios.get(`${appConfig.tasksUrl}/${taskId}`);\n    return response.data;\n  }\n  async getTasksByBoard(boardId) {\n    const response = await axios.get(`${appConfig.boardsUrl}/${boardId}/tasks`);\n    return response.data;\n  }\n  async getTasksByColumn(boardId, columnId) {\n    const response = await axios.get(`${appConfig.boardsUrl}${boardId}/columns/${columnId}/tasks`);\n    return response.data;\n  }\n  async addTask(task) {\n    const response = await axios.post(appConfig.tasksUrl, task);\n    return response.data;\n  }\n  async updateTask(task) {\n    const response = await axios.put(`${appConfig.tasksUrl}/${task._id}`, task); // Here, 'task' is the request body\n    return response.data;\n  }\n  async updateStatus(taskId, columnId) {\n    const response = await axios.patch(`${appConfig.tasksUrl}/${taskId}/status`, {\n      columnId\n    } //  This creates an object: { columnId: \"someColumnId\" }\n    );\n    return response.data;\n  }\n  async addAssignee(taskId, userId) {\n    const response = await axios.post(`${appConfig.tasksUrl}/${taskId}/assignees`, {\n      userId\n    });\n    return response.data;\n  }\n  async removeAssignee(taskId, userId) {\n    const response = await axios.delete(`${appConfig.tasksUrl}/${taskId}/assignees/${userId}`);\n    return response.data;\n  }\n  async deleteTask(taskId) {\n    await axios.delete(`${appConfig.tasksUrl}/${taskId}`);\n  }\n}\nexport const taskService = new TaskService();","map":{"version":3,"names":["axios","appConfig","TaskService","getAllTasks","response","get","tasksUrl","data","getOneTask","taskId","getTasksByBoard","boardId","boardsUrl","getTasksByColumn","columnId","addTask","task","post","updateTask","put","_id","updateStatus","patch","addAssignee","userId","removeAssignee","delete","deleteTask","taskService"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Services/TaskService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nimport { TaskModel } from \"../Models/TaskModel\";\n\nclass TaskService {\n\n    // Without Redux for now\n    public async getAllTasks(): Promise<TaskModel[]> {\n        const response = await axios.get<TaskModel[]>(appConfig.tasksUrl);\n        return response.data;\n    }\n\n    public async getOneTask(taskId: string): Promise<TaskModel> {\n        const response = await axios.get<TaskModel>(`${appConfig.tasksUrl}/${taskId}`);\n        return response.data;\n    }\n\n    public async getTasksByBoard(boardId: string): Promise<TaskModel[]> {\n        const response = await axios.get<TaskModel[]>(`${appConfig.boardsUrl}/${boardId}/tasks`);\n        return response.data;\n    }\n\n    public async getTasksByColumn(boardId: string, columnId: string): Promise<TaskModel[]> {\n        const response = await axios.get<TaskModel[]>(`${appConfig.boardsUrl}${boardId}/columns/${columnId}/tasks`);\n        return response.data;\n    }\n\n    public async addTask(task: TaskModel): Promise<TaskModel> {\n        const response = await axios.post<TaskModel>(appConfig.tasksUrl, task);\n        return response.data;\n    }\n\n    public async updateTask(task: Partial<TaskModel>): Promise<TaskModel> {\n        const response = await axios.put<TaskModel>(`${appConfig.tasksUrl}/${task._id}`, task); // Here, 'task' is the request body\n        return response.data;\n    }\n\n    public async updateStatus(taskId: string, columnId: string): Promise<TaskModel> {\n        const response = await axios.patch<TaskModel>(\n            `${appConfig.tasksUrl}/${taskId}/status`, \n            { columnId } //  This creates an object: { columnId: \"someColumnId\" }\n        );\n        return response.data;\n    }\n\n    public async addAssignee(taskId: string, userId: string): Promise<TaskModel> {\n        const response = await axios.post<TaskModel>(\n            `${appConfig.tasksUrl}/${taskId}/assignees`,\n            { userId }\n        );\n        return response.data;\n    }\n\n    public async removeAssignee(taskId: string, userId: string): Promise<TaskModel> {\n        const response = await axios.delete<TaskModel>(\n            `${appConfig.tasksUrl}/${taskId}/assignees/${userId}`\n        );\n        return response.data;\n    }\n\n    public async deleteTask(taskId: string): Promise<void> {\n        await axios.delete(`${appConfig.tasksUrl}/${taskId}`);\n    }\n}\n\nexport const taskService = new TaskService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAG9C,MAAMC,WAAW,CAAC;EAEd;EACA,MAAaC,WAAWA,CAAA,EAAyB;IAC7C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAcJ,SAAS,CAACK,QAAQ,CAAC;IACjE,OAAOF,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaC,UAAUA,CAACC,MAAc,EAAsB;IACxD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAY,GAAGJ,SAAS,CAACK,QAAQ,IAAIG,MAAM,EAAE,CAAC;IAC9E,OAAOL,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaG,eAAeA,CAACC,OAAe,EAAwB;IAChE,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAc,GAAGJ,SAAS,CAACW,SAAS,IAAID,OAAO,QAAQ,CAAC;IACxF,OAAOP,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaM,gBAAgBA,CAACF,OAAe,EAAEG,QAAgB,EAAwB;IACnF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAc,GAAGJ,SAAS,CAACW,SAAS,GAAGD,OAAO,YAAYG,QAAQ,QAAQ,CAAC;IAC3G,OAAOV,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaQ,OAAOA,CAACC,IAAe,EAAsB;IACtD,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,IAAI,CAAYhB,SAAS,CAACK,QAAQ,EAAEU,IAAI,CAAC;IACtE,OAAOZ,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaW,UAAUA,CAACF,IAAwB,EAAsB;IAClE,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,GAAG,CAAY,GAAGlB,SAAS,CAACK,QAAQ,IAAIU,IAAI,CAACI,GAAG,EAAE,EAAEJ,IAAI,CAAC,CAAC,CAAC;IACxF,OAAOZ,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAac,YAAYA,CAACZ,MAAc,EAAEK,QAAgB,EAAsB;IAC5E,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACsB,KAAK,CAC9B,GAAGrB,SAAS,CAACK,QAAQ,IAAIG,MAAM,SAAS,EACxC;MAAEK;IAAS,CAAC,CAAC;IACjB,CAAC;IACD,OAAOV,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAagB,WAAWA,CAACd,MAAc,EAAEe,MAAc,EAAsB;IACzE,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,IAAI,CAC7B,GAAGhB,SAAS,CAACK,QAAQ,IAAIG,MAAM,YAAY,EAC3C;MAAEe;IAAO,CACb,CAAC;IACD,OAAOpB,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAakB,cAAcA,CAAChB,MAAc,EAAEe,MAAc,EAAsB;IAC5E,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAAC0B,MAAM,CAC/B,GAAGzB,SAAS,CAACK,QAAQ,IAAIG,MAAM,cAAce,MAAM,EACvD,CAAC;IACD,OAAOpB,QAAQ,CAACG,IAAI;EACxB;EAEA,MAAaoB,UAAUA,CAAClB,MAAc,EAAiB;IACnD,MAAMT,KAAK,CAAC0B,MAAM,CAAC,GAAGzB,SAAS,CAACK,QAAQ,IAAIG,MAAM,EAAE,CAAC;EACzD;AACJ;AAEA,OAAO,MAAMmB,WAAW,GAAG,IAAI1B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}