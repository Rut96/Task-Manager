{"ast":null,"code":"import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass TaskService {\n  // Without Redux for now\n  async getAllTasks() {\n    const response = await axios.get(appConfig.tasksUrl);\n    const tasks = response.data;\n    return tasks;\n  }\n  async getOneTask(taskId) {\n    const response = await axios.get(appConfig.tasksUrl + taskId);\n    const task = response.data;\n    return task;\n  }\n  async getTasksByBoard(boardId) {\n    const response = await axios.get(`${appConfig.boardsUrl}/${boardId}/tasks`);\n    const tasks = response.data;\n    return tasks;\n  }\n  async addTask(task) {\n    const response = await axios.post(appConfig.tasksUrl, task);\n    const dbTask = response.data;\n    return dbTask;\n  }\n  async updateTask(task) {\n    const response = await axios.put(appConfig.tasksUrl + task._id, task);\n    const dbTask = response.data;\n    return dbTask;\n  }\n  async deleteTask(taskId) {\n    await axios.delete(appConfig.tasksUrl + taskId);\n  }\n  async addAssignee(taskId, userId) {\n    const response = await axios.post(`${appConfig.tasksUrl}${taskId}/assignees`, {\n      userId\n    });\n    const dbTask = response.data;\n    return dbTask;\n  }\n  async removeAssignee(taskId, userId) {\n    const response = await axios.delete(`${appConfig.tasksUrl}${taskId}/assignees/${userId}`);\n    const dbTask = response.data;\n    return dbTask;\n  }\n}\nexport const taskService = new TaskService();","map":{"version":3,"names":["axios","appConfig","TaskService","getAllTasks","response","get","tasksUrl","tasks","data","getOneTask","taskId","task","getTasksByBoard","boardId","boardsUrl","addTask","post","dbTask","updateTask","put","_id","deleteTask","delete","addAssignee","userId","removeAssignee","taskService"],"sources":["/Users/rutli/Desktop/PetProjects/Task Manager/Frontend/src/Services/TaskService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nimport { TaskModel } from \"../Models/TaskModel\";\n\nclass TaskService {\n\t\n    // Without Redux for now\n    public async getAllTasks(): Promise<TaskModel[]> {\n        const response = await axios.get(appConfig.tasksUrl);\n        const tasks = response.data;\n        return tasks;\n    }\n    \n    public async getOneTask(taskId: string): Promise<TaskModel> {\n        const response = await axios.get(appConfig.tasksUrl + taskId);\n        const task = response.data;\n        return task;\n    }\n\n    public async getTasksByBoard(boardId: string): Promise<TaskModel[]> {\n        const response = await axios.get(`${appConfig.boardsUrl}/${boardId}/tasks`);\n        const tasks = response.data;\n        return tasks;\n    }\n\n    public async addTask(task: TaskModel): Promise<TaskModel> {\n        const response = await axios.post(appConfig.tasksUrl, task);\n        const dbTask = response.data;\n        return dbTask;\n    }\n\n    public async updateTask(task: TaskModel): Promise<TaskModel> {\n        const response = await axios.put(appConfig.tasksUrl + task._id, task);\n        const dbTask = response.data;\n        return dbTask;\n    }\n\n    public async deleteTask(taskId: string): Promise<void> {\n        await axios.delete(appConfig.tasksUrl + taskId);\n    }\n\n    public async addAssignee(taskId: string, userId: string): Promise<TaskModel> {\n        const response = await axios.post(`${appConfig.tasksUrl}${taskId}/assignees`, { userId });\n        const dbTask = response.data;\n        return dbTask;\n    }\n\n    public async removeAssignee(taskId: string, userId: string): Promise<TaskModel> {\n        const response = await axios.delete(`${appConfig.tasksUrl}${taskId}/assignees/${userId}`);\n        const dbTask = response.data;\n        return dbTask;\n    }\n\n}\n\nexport const taskService = new TaskService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAG9C,MAAMC,WAAW,CAAC;EAEd;EACA,MAAaC,WAAWA,CAAA,EAAyB;IAC7C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,SAAS,CAACK,QAAQ,CAAC;IACpD,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3B,OAAOD,KAAK;EAChB;EAEA,MAAaE,UAAUA,CAACC,MAAc,EAAsB;IACxD,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,SAAS,CAACK,QAAQ,GAAGI,MAAM,CAAC;IAC7D,MAAMC,IAAI,GAAGP,QAAQ,CAACI,IAAI;IAC1B,OAAOG,IAAI;EACf;EAEA,MAAaC,eAAeA,CAACC,OAAe,EAAwB;IAChE,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,SAAS,CAACa,SAAS,IAAID,OAAO,QAAQ,CAAC;IAC3E,MAAMN,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3B,OAAOD,KAAK;EAChB;EAEA,MAAaQ,OAAOA,CAACJ,IAAe,EAAsB;IACtD,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,IAAI,CAACf,SAAS,CAACK,QAAQ,EAAEK,IAAI,CAAC;IAC3D,MAAMM,MAAM,GAAGb,QAAQ,CAACI,IAAI;IAC5B,OAAOS,MAAM;EACjB;EAEA,MAAaC,UAAUA,CAACP,IAAe,EAAsB;IACzD,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,GAAG,CAAClB,SAAS,CAACK,QAAQ,GAAGK,IAAI,CAACS,GAAG,EAAET,IAAI,CAAC;IACrE,MAAMM,MAAM,GAAGb,QAAQ,CAACI,IAAI;IAC5B,OAAOS,MAAM;EACjB;EAEA,MAAaI,UAAUA,CAACX,MAAc,EAAiB;IACnD,MAAMV,KAAK,CAACsB,MAAM,CAACrB,SAAS,CAACK,QAAQ,GAAGI,MAAM,CAAC;EACnD;EAEA,MAAaa,WAAWA,CAACb,MAAc,EAAEc,MAAc,EAAsB;IACzE,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,IAAI,CAAC,GAAGf,SAAS,CAACK,QAAQ,GAAGI,MAAM,YAAY,EAAE;MAAEc;IAAO,CAAC,CAAC;IACzF,MAAMP,MAAM,GAAGb,QAAQ,CAACI,IAAI;IAC5B,OAAOS,MAAM;EACjB;EAEA,MAAaQ,cAAcA,CAACf,MAAc,EAAEc,MAAc,EAAsB;IAC5E,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACsB,MAAM,CAAC,GAAGrB,SAAS,CAACK,QAAQ,GAAGI,MAAM,cAAcc,MAAM,EAAE,CAAC;IACzF,MAAMP,MAAM,GAAGb,QAAQ,CAACI,IAAI;IAC5B,OAAOS,MAAM;EACjB;AAEJ;AAEA,OAAO,MAAMS,WAAW,GAAG,IAAIxB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}